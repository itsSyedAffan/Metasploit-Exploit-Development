#!/usr/bin/env ruby
#/home/nanob0t/.rvm/rubies/ruby-1.9.2-p290/bin/ruby
#require '/var/lib/gems/1.9.2/gems/rainbow-1.1.4/lib/rainbow.rb'

#=======================================================
#
# FILE: fuzz.rb
#
# DESCRIPTION: # A quick rewrite of ftpfuzz.py by "isomorphix" 
# can be customized quickly. 
# BUGS:    None reported :::
# NOTES:   Works on Nix x64
# AUTHOR:  Rick Flores nanoquetz9l<@>nanotechfibers.com
# VERSION: "SEAL Team v.1"
# CREATED: 07/8/11
# REVISION:
#=======================================================
$: << '.'

begin
  require 'rainbow'
  require 'socket'

rescue LoadError => e
  puts "ERROR: Missing ruby gem. Please see README file."
  puts e.inspect
end

@version = "SEAL Team v.1"

# my 1337 banner

def banner()
  puts "___________________________________________________________________"
  puts "  _   _                   _____            _                       "
  puts " | \ | |                 |  ___|          | |                      "
  puts " |  \| | __ _ _ __   ___ | |__ _ __   __ _| |_ __   ___  ___ _ __  "
  puts " | . ` |/ _` | '_ \ / _ \|  __| '_ \ / _` | | '_ \ / _ \/ _ \ '__| "
  puts " | |\  | (_| | | | | (_) | |__| | | | (_| |_| | | |  __/  __/ |    "
  puts " \_| \_/\__,_|_| |_|\___/\____/_| |_|\__, (_)_| |_|\___|\___|_|    "
  puts "                                      __/ |                        "
  puts "                                     |___/  " + @version
  puts "                                                                   "
  puts "       Quick & dirty fuzzer that can be customized quickly."
  puts "___________________________________________________________________"
end

# GNU license

def license()
  puts "# Copyright (C) 2011 Rick Flores"
  puts "# This program comes with ABSOLUTELY NO WARRANTY."
  puts "# This is free software, and you are welcome to redistribute it"
  puts "# under certain conditions. See GNU GPLv3."
end

#puts banner ()

#
# Variables to be passed at the command line and assigned for
# use in identifying buffer overflow.
# 
unless ARGV.length == 2
        puts "The correct use of fuzz.rb is as follows:".foreground(:yellow)
        puts "Usage: ruby fuzz.rb Target_IP_Address Target_Destination_Port".foreground(:yellow)
        puts "Example: ./fuzz.rb 192.168.15.3 666".foreground(:red).bright.blink
        exit
end

# Declare needed variables
target = ARGV[0]
port   = ARGV[1]
buffer = ["A"]
c      = 20
while buffer.length <= 40  # While buffer length is less than or = to 40
  buffer << "A" * c        # Append 20 "A"'s to the buffer 
  c += 100                 # C will increase/increment by 100
end                        # Terminate the loop

vuln_parameters = ["/../","/"]                                                                                                                                                                                                                                                                                                                                         
commands = ["-al","ABOR","ACCT","ACCL","ALLO","APPE","CWD","CHMOD","CHOWN","CDUP","DELE","EXEC","FEAT","HELP","HOST","LANG","LIST","LS","MDTM","MKD","MLST","MODE","MSG","NLST","NOOP","OPTS","PASV","PORT","PROT","PWD","PSWD","REIN","REST","RETR","RSET","RMD","RNFR","RNTO","SITE","SMNT","STAT","STOR","STOU","SRTU","SYST","TOP","TYPE","UIDL","USER","WHO","XCUP","XCRC","XCWD","XMKD","XPWD","XRMD","ZONE"]
commands.each {|cmd|
  buffer.each {|str|
    puts "Sending #{cmd} command with #{str.length} bytes".foreground(:red).bright
	socket = TCPSocket.new(target, port)
	socket.puts('USER test\r\n')
	puts socket.gets
	socket.puts('PASS test\r\n')
	puts socket.gets
	socket.puts(cmd + " " + str + "\r\n")
	puts socket.gets
	socket.puts('QUIT\r\n')
	socket.close
  }
}